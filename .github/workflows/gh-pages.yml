name: Publish Release to GitHub Pages

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      # 1. Checkout the repository.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Download the release asset (assumes the release has a zip asset named "pdf-artifacts.zip").
      - name: Download Release Asset
        run: |
          # Get the asset download URL from the release event payload.
          asset_url=$(jq -r '.release.assets[] | select(.name=="pdf-artifacts.zip") | .browser_download_url' "$GITHUB_EVENT_PATH")
          echo "Downloading from $asset_url"
          curl -L -o pdf-artifacts.zip "$asset_url"
        env:
          GITHUB_EVENT_PATH: ${{ github.event_path }}

      # 3. Extract the artifact to a folder named "site".
      - name: Extract Artifact
        run: |
          mkdir site
          unzip pdf-artifacts.zip -d site

      # 4. Inline creation of the generate_index.py script
      - name: Create generate_index.py script
        run: |
          cat << 'EOF' > generate_index.py
          #!/usr/bin/env python3
          import os
          import sys
          import html

          def generate_index_html(root_dir):
              index_path = os.path.join(root_dir, "index.html")
              with open(index_path, "w", encoding="utf-8") as index_file:
                  index_file.write("<html><head><meta charset='UTF-8'><title>Index of {}</title></head><body>\n".format(root_dir))
                  index_file.write("<h1>Index of {}</h1>\n<ul>\n".format(root_dir))
                  for current_path, dirs, files in os.walk(root_dir):
                      rel_dir = os.path.relpath(current_path, root_dir)
                      if rel_dir == ".":
                          rel_dir = ""
                      else:
                          rel_dir += "/"
                      for d in dirs:
                          link = html.escape(rel_dir + d + "/")
                          index_file.write(f"<li>[DIR] <a href='{link}'>{html.escape(d)}</a></li>\n")
                      for f in files:
                          if f == "index.html":
                              continue
                          link = html.escape(rel_dir + f)
                          index_file.write(f"<li>[FILE] <a href='{link}'>{html.escape(f)}</a></li>\n")
                  index_file.write("</ul>\n</body></html>")
              print("Index generated at", index_path)

          if __name__ == "__main__":
              if len(sys.argv) != 2:
                  print("Usage: python generate_index.py <directory>")
                  sys.exit(1)
              generate_index_html(sys.argv[1])
          EOF

      - name: Make script executable
        run: chmod +x generate_index.py

      # 5. Generate an index file to navigate the directories.
      - name: Generate Index
        run: python generate_index.py site

      # 6. Deploy the contents of the "site" folder to GitHub Pages.
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
